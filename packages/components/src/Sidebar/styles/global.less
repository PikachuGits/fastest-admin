:root {
  --fast-menu-box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.5) ;
  --fast-menu-background-color: rgba(224, 224, 224, 1);

}

/* 暗色模式下 */
.dark {
  --fast-menu-box-shadow: 0 0 5px 0 rgba(255, 255, 255, 0.3);
  --fast-menu-background-color: rgba(101, 101, 101, 1);

}
.box {
  width: 40px;
  height: 20px;
  border: 1px solid #c01;
  /* 使用 Flexbox 轻松实现垂直居中 */
  display: flex;
  align-items: center;
  
  /* justify-content: center; 也可以在这里用，但下面的 text-align 更灵活 */

  /* 定义一个基础字体大小，scale会基于此进行计算 */
  font-size: 16px;
}

.truncation-wrapper {
  /* 1. 布局层：负责截断和水平居中 */
  width: 100%;
  
  /* 关键：让内部的 inline-block 元素居中 */
  text-align: center; 

  /* 截断三件套 */
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;

  /* 调试用，可以看到这个容器的范围 */
  /* background-color: rgba(255, 0, 0, 0.1); */
}

.scaled-text {
  /* 2. 视觉层：负责缩放 */
  display: inline-block; /* 关键：使其可以被 text-align: center 影响，同时可以应用 transform */
  
  /* 缩放文本，可以设置任何值，比如 0.7 就会让 16px 的字看起来像 11.2px */
  transform: scale(0.7); 
  
  /* 确保缩放中心点正确，尤其是在一些复杂场景下 */
  transform-origin: center; 
}